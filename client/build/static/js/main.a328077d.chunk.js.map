{"version":3,"sources":["components/TodoItem.jsx","App.jsx","index.js"],"names":["TodoItem","id","item","onCheck","onDelete","style","textDecoration","completed","onClick","event","target","classList","className","task","App","useState","input","setInput","items","setItems","removeItem","tempList","reqBody","fetch","method","headers","body","JSON","stringify","then","res","splice","taskCompleted","getData","json","data","sort","a","b","Number","useEffect","type","value","onChange","newData","push","map","index","key","ReactDOM","render","document","getElementById"],"mappings":"qMAuBeA,MArBf,YAAoD,IAAhCC,EAA+B,EAA/BA,GAAIC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,SAOnC,OACI,oCACA,wBACIC,MAAS,CAACC,eAAgBJ,EAAKK,UAAY,eAAe,IAC1DC,QAVY,SAACC,GACgB,SAA9BA,EAAMC,OAAOC,UAAU,GACtBR,EAAQF,GAEPG,EAASH,KAQV,0BAAMW,UAAU,QAAQV,EAAKW,MAC7B,0BAAMD,UAAU,SAAhB,Q,MCqFGE,MAjGf,WAAgB,IAAD,EACeC,mBAAS,IADxB,mBACJC,EADI,KACGC,EADH,OAEeF,mBAAS,IAFxB,mBAEJG,EAFI,KAEGC,EAFH,KA0BX,SAASC,EAAWnB,GAChB,IAAIoB,EAAQ,YAAOH,GACbI,EAAU,CAAErB,GAAIoB,EAASpB,GAAIA,IACnCsB,MAAM,6BAA8B,CAClCC,OAAQ,SACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUN,KACpBO,MAAK,SAACC,GACPT,EAASU,OAAO9B,EAAI,GACpBkB,EAASE,MAKf,IAAMW,EAAgB,SAAC/B,GACnB,IAAIoB,EAAQ,YAAOH,GACbI,EAAU,CAACrB,GAAGiB,EAAMjB,GAAIA,GAAIY,KAAKK,EAAMjB,GAAIY,KAAMN,WAAYW,EAAMjB,GAAIM,WAC7EgB,MAAM,6BAA8B,CAClCC,OAAQ,MACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUN,KAEtBO,MAAK,SAACC,GACHT,EAASpB,GAAMqB,EACfH,EAASE,OAKXY,EAAU,WACZV,MAAM,8BACHM,MAAK,SAACC,GAAD,OAASA,EAAII,UAClBL,MAAK,SAACM,GACLA,EAAKC,MAAK,SAACC,EAAGC,GAAJ,OAAUC,OAAOF,EAAEpC,IAAMsC,OAAOD,EAAErC,OAC5CkB,EAASgB,OAQjB,OAJAK,qBAAU,WACNP,MACC,IAGH,yBAAKrB,UAAU,YACX,yBAAKA,UAAU,WACX,wBAAIA,UAAU,SAAd,eAEA,2BACI6B,KAAK,OACLC,MAAO1B,EACP2B,SAAU,SAAClC,GAAWQ,EAASR,EAAMC,OAAOgC,UAEhD,4BAAQlC,QA1ElB,SAAiBC,GACb,IAAMmC,EAAU,CACZ/B,KAAMG,EACNT,WAAW,GAGfgB,MAAM,6BAA8B,CAChCC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUgB,KAExBf,MAAK,SAACC,GAAD,OAASA,EAAII,UAClBL,MAAK,SAACM,GACH,IAAId,EAAQ,YAAOH,GACnBG,EAASwB,KAAKV,GACdhB,EAASE,MAEbY,IAEAhB,EAAS,MAuDH,OAEJ,yBAAKL,UAAU,SACb,4BACKM,EAAM4B,KAAI,SAAC5C,EAAM6C,GAAP,OACP,kBAAC,EAAD,CACIC,IAAKD,EACL9C,GAAI8C,EACJ7C,KAAMA,EACNE,SAAUgB,EACVjB,QAAS6B,WCxFjCiB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.a328077d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction TodoItem({ id, item, onCheck, onDelete }) {\r\n    const eventListen = (event) => {\r\n        if(event.target.classList[0] === \"task\") {\r\n            onCheck(id);\r\n        }\r\n        else onDelete(id);\r\n    }\r\n    return (\r\n        <>\r\n        <li\r\n            style = {{textDecoration: item.completed ? \"line-through\":\"\"}}\r\n            onClick={eventListen}\r\n        >\r\n            <span className=\"task\">{item.task}</span>\r\n            <span className=\"xmark\">X</span>\r\n        </li>\r\n         \r\n        </>\r\n    )\r\n}\r\n\r\nexport default TodoItem;","import React, {useEffect, useState } from 'react';\r\nimport TodoItem from \"./components/TodoItem\";\r\nimport './App.css';\r\n\r\nfunction App() {\r\n    const [input, setInput] = useState(\"\");\r\n    const [items, setItems] = useState([]);\r\n\r\n    function addItem(event) {\r\n        const newData = {\r\n            task :input,\r\n            completed: false\r\n        }\r\n\r\n        fetch(\"http://localhost:9999/todo\", {\r\n            method: \"POST\",\r\n            headers: { \"Content-type\": \"application/json\" },\r\n            body: JSON.stringify(newData),\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            let tempList = [...items];\r\n            tempList.push(data);\r\n            setItems(tempList);\r\n        });\r\n        getData();\r\n        \r\n        setInput(\"\");\r\n    }\r\n\r\n    function removeItem(id) {\r\n        let tempList = [...items];\r\n        const reqBody = { id: tempList[id].id };\r\n        fetch(\"http://localhost:9999/todo\", {\r\n          method: \"DELETE\",\r\n          headers: { \"Content-type\": \"application/json\" },\r\n          body: JSON.stringify(reqBody),\r\n        }).then((res) => {\r\n          tempList.splice(id, 1);\r\n          setItems(tempList);\r\n        });\r\n\r\n    }\r\n\r\n    const taskCompleted = (id) => {\r\n        let tempList = [...items];\r\n        const reqBody = {id:items[id].id, task:items[id].task, completed: !items[id].completed}\r\n        fetch(\"http://localhost:9999/todo\", {\r\n          method: \"PUT\",\r\n          headers: { \"Content-type\": \"application/json\" },\r\n          body: JSON.stringify(reqBody),\r\n        })\r\n        .then((res) => {\r\n            tempList[id] = reqBody;\r\n            setItems(tempList);\r\n        });\r\n        \r\n    };\r\n\r\n    const getData = ()=> {\r\n        fetch(\"http://localhost:9999/todo\")\r\n          .then((res) => res.json())\r\n          .then((data) => {\r\n            data.sort((a, b) => Number(a.id) - Number(b.id));\r\n            setItems(data);\r\n          });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getData();\r\n      }, []);\r\n\r\n    return (\r\n      <div className=\"todolist\">\r\n          <div className=\"heading\">\r\n              <h1 className=\"title\">To-Do List</h1>\r\n          </div>\r\n              <input\r\n                  type=\"text\"\r\n                  value={input}\r\n                  onChange={(event) => {setInput(event.target.value)}}\r\n              />\r\n              <button onClick={addItem}>Add</button>\r\n\r\n          <div className=\"items\">\r\n            <ul>\r\n                {items.map((item, index) => (\r\n                    <TodoItem\r\n                        key={index}\r\n                        id={index}\r\n                        item={item}\r\n                        onDelete={removeItem}\r\n                        onCheck={taskCompleted}\r\n                    />\r\n                ))}\r\n            </ul>\r\n          </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}